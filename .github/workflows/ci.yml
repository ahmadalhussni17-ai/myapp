name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    env:
      APP_ENV: testing
      APP_KEY: base64:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
      DB_CONNECTION: sqlite
      # Absolute path to the sqlite file:
      DB_DATABASE: ${{ github.workspace }}/database/database.sqlite
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array
      BROADCAST_DRIVER: log
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo_mysql, bcmath, pcntl, gd, zip, sqlite3, pdo_sqlite
          coverage: none
          tools: composer:v2

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP deps
        run: composer install --no-interaction --prefer-dist

      - name: Prepare SQLite
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Create .env from example
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate key
        run: php artisan key:generate --force

      # If your tests don't migrate automatically, uncomment:
      - name: Run migrations
        run: php artisan migrate --force

      - name: Run tests
        run: php artisan test --colors=always

      # --- Frontend ---

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install JS deps
        run: npm ci

      - name: Build assets (Vite)
        run: npm run build

      - name: Upload built assets artifact
        uses: actions/upload-artifact@v4
        with:
          name: public-build
          path: public/build
